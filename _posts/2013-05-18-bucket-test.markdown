---
layout: post
title: "일상 속 버킷테스트의 필요성"
categories: thought
noindex: true
---

웹서비스나 마케팅 분야에서 많이 쓰는 말로 버킷테스트(Bucket Test)라는 게 있다. A/B 테스팅이라고도 하는데, 전체 사용자 중에서 일부만을 대상으로 새로운 시도를 시험 적용해보는 것이다. 이를 잘 활용한다고 알려진 대표적인 기업이 바로 구글이다. 검색 트래픽의 일부를 항상 버킷테스트에 할당해서 새로운 검색 알고리즘이나 디자인을 비교/평가하며, 새로운 버전 상에서 사람들의 행위를 관찰해서 기존보다 나아졌다고 판단할 때만 전체에 확대 적용한다고 한다. 철저하게 데이터에 기반해서 의사결정을 내리는 구글 검색답다.

상시 버킷테스트는 이제 널리 퍼져서 다양한 곳에 활용되는데, 이것이 왜 중요할까? 끊임없이 현재를 평가하고 새로운 실험을 하도록 유도한다는 데서 이유를 찾을 수 있다. 우리가 일상적으로 많이 쓰는 것이나 자주 가는 곳을 하나 떠올려보자. 가령 특정 상점이라면, 그곳에서 파는 물건이 가장 저렴하거나, 품질이 최상이거나, 혹은 가성비가 우수한지 꼼꼼하게 따져본 적이 있는가?

아마 있을 것이다. 하지만, 무척 예전인 경우가 태반이리라 짐작한다. 처음에 수많은 선택지 중에서 하나를 고른 데에는 나름대로 합리적인 이유가 있었을 것이다. 그리고 그렇게 찾은 선택지를 이후에도 반복하는 것은 일상 속에서 수많은 의사결정을 해야 하는 우리에게 인지 과부하를 줄여주는 합리적인 행동이다.

하지만, 시간이 흐르면 많은 것이 변한다. 일단 우리의 경험과 지식이 늘어났고, 예전에는 없었거나 별볼일 없었던 대안이 무척 매력적으로 성장해있을 수 있다. 그런데도 과거의 만족감과 현재의 익숙함 때문에 새로운 것을 찾아보기를 멈춘다면 자발적으로 더 나은 대안을 포기하고 스스로를 국지적 최적화의 봉우리에 가두는 꼴이다.

맨날 같은 곳에서만 물건을 사고, 같은 웹사이트만 이용하는 사용자는 기업 입장에서 보면 더 만족시켜야겠다는 동기부여가 상대적으로 덜 절실한 고객이다. 불편할 수도 있는 표현이지만 '잡은 물고기에게는 먹이를 주지 않는다.'

새로운 프로그래밍 언어나 도구를 배우려고 하지 않는 IT인력은 어떤가? 요즘같이 혁신적인 제품, 라이브러리가 쏟아져나오는 때에는 자칫하면 경쟁력을 잃거나 심하면 자동화의 주체가 아닌 대상으로 전락해버릴 수도 있다. (개인적으로 이 '자동화'는 요즘들어 무척 심각하고 진지하게 생각하는 주제다.) 이런 위험을 피하려면, 내가 하는 일과 관련해서 세상에서 어떤 일이 벌어지고 있는지를 계속 두리번거릴 필요가 있다.

기업에서 고객의 일부를 대상으로 버킷테스트를 하듯이, 개인도 가용 자원(관심/시간 등)의 일부를 따로 할당해서 의도적으로 낯선 시도를 할 필요가 있다. 완전히 색다른 경험에 도전할 수도 있고, 같은 문제를 해결하기 위한 다른 대안을 시험해볼 수도 있다.

문제는 "개인용 버킷테스트"에 얼마 만큼의 자원을 투입할지를 관리하는 것이다. 새로운 시도에는 위험이 따르기 마련이며, 실패할 확률도 무척 높다. 그런데도 버킷테스트에만 치중하느라 원래의 강점을 살리지 못한다면 애초에 하지 않느니만 못하다. 웹사이트에서 버킷테스트를 할 때에도 트래픽의 반을 뚝 잘라주며 '엣다' 하고 실험하는 것이 아니다. 아~주 일부만을 대상으로 하는 말 그대로 '테스트'다. 그렇게 간을 본 뒤 좋으면 받아들이고 아니면 버리는 과정을 계속 반복할 뿐이다.

익숙함의 덫에 갇혀버리는 [『필터 버블』](http://www.4four.us/article/2011/09/filter-bubble)은 꼭 서비스 개인화에만 따라오는 것이 아니다. 의식적인 노력이 없다면 자기도 모르는 사이에 주변에 울타리를 친다. 그러니 스스로 감당할 수 있는 만큼만 적당히, 그러나 끊임없이 주도적으로 자기 삶에 버킷테스트를 도입해보자.